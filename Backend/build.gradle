plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'


java {
	sourceCompatibility = '17'
}

jar {
    enabled = false
}

repositories {
	mavenCentral()
}

dependencies {
    implementation project(":Shared")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

task printVersion {
    group("deploy")
    //dependsOn("build")
    println "has property: " + version
}

build.dependsOn printVersion

task copyProperties(type: Copy) {
    from 'src'
    include 'gradle.properties'
    into 'build/libs'
}

tasks.register('copy', Copy) {
    group("IO")
    from(file('gradle.properties'))
    into('/build/libs')
}

tasks.register('delete', Delete) {
    group("IO")
    delete(file('/build/libs/gradle.properties'))
}
// f√ºhre printVersion for build aus
build.dependsOn('printVersion')

delete.dependsOn('copy')

tasks.register('copyForZip', Copy) {
    group("IO")
    from(file('gradle.properties'))
    into('/build/libs')

    from(file('HELP.md'))
    into('/build/libs')
}

tasks.register('packageDistribution', Zip) {
    group('zip')

    from 'build/libs' // Verzeichnis, das ins ZIP-Archiv eingeschlossen wird
    include '*.*' // Datei(en), die eingeschlossen werden sollen

    destinationDirectory = file('build/libs/dist')
    archiveFileName = 'demo.zip'
}

tasks.register('makeDirs') {
    file('build/libs/dist').mkdirs()
}

packageDistribution.dependsOn('build')
packageDistribution.dependsOn('copyForZip')
packageDistribution.dependsOn('makeDirs')

